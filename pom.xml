<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.mycompany</groupId>
    <artifactId>SCRUMVEST</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>


  <!-- Usamos el parent de Spring Boot para aprovechar su dependency management -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.0.5</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <!-- Propiedades utilizadas -->
  <properties>
    <java.version>17</java.version>
    <spring-boot.version>3.0.5</spring-boot.version>
    <javafx.version>20</javafx.version>
    <lombok.version>1.18.26</lombok.version>
    <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
    <javafx.maven.plugin.version>0.0.8</javafx.maven.plugin.version>
    <!-- Versión de H2. Puedes usar 1.4.200 o una versión 2.x según el soporte requerido -->
    <h2.version>2.2.220</h2.version>
  </properties>

  <dependencies>
    <!-- Spring Boot Starter: configuración básica de Spring Boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>

    <!-- Spring Boot Starter Data JPA: para trabajar con JPA + Hibernate -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>

    <!-- Spring Boot Starter Web: para exponer servicios REST si fuera necesario -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>

    <!-- Conector de base de datos H2 (para desarrollo y pruebas) -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
      <scope>runtime</scope>
    </dependency>
    
    <!-- Conector de PostgreSQL (opcional para producción, descomentar si se usa) -->
    <!--
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.5.4</version>
      <scope>runtime</scope>
    </dependency>
    -->

    <!-- Dependencias para JavaFX -->
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javafx.version}</version>
    </dependency>

    <!-- Spring Boot Starter Logging (incluido en spring-boot-starter, se declara por claridad) -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-logging</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>

    <!-- Spring Boot Starter Validation: para validaciones con anotaciones -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>

    <!-- Spring Boot Starter Test: para pruebas unitarias e integradas -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>${spring-boot.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Lombok: reduce la verbosidad del código eliminando getters, setters, etc. -->

    <!-- Dependencia Jakarta (Opcional)
         Jakarta EE es la evolución de Java EE. En Spring Boot la mayoría de estas APIs ya están gestionadas,
         por lo que en muchos casos se puede prescindir de incluirla si no se usa funcionalidad específica.
         Si la requieres, descomenta el siguiente bloque: -->
    <!--
    <dependency>
      <groupId>jakarta.platform</groupId>
      <artifactId>jakarta.jakartaee-api</artifactId>
      <version>9.1.0</version>
      <scope>provided</scope>
    </dependency>
    -->
  </dependencies>

  <build>
    <plugins>
      <!-- Plugin de Spring Boot para empaquetar la aplicación en un fat jar -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Plugin para JavaFX -->
      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>${javafx.maven.plugin.version}</version>
        <configuration>
          <mainClass>com.scrumvest.ui.controller.MainApp</mainClass>
        </configuration>
      </plugin>

      <!-- Plugin Compiler para compilar usando JDK 17 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <release>17</release>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>